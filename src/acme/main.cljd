(ns acme.main
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:flutter/cupertino.dart" :as c]
    ["package:flutter/widgets.dart" :as w]
    ["dart:ui" :as d]
    ["package:flutter_platform_widgets/flutter_platform_widgets.dart" :as pw]
    [cljd.flutter :as f]))

(def darkDefaultCupertinoTheme (c/CupertinoThemeData .brightness d.Brightness/dark))

(defn main []
  (f/run
    (pw/PlatformProvider
      .builder
      (fn [_]
        (pw/PlatformTheme
          .themeMode m.ThemeMode/dark
          .materialLightTheme (.light m/ThemeData)
          .materialDarkTheme (.dark m/ThemeData)
          .cupertinoLightTheme (m/MaterialBasedCupertinoThemeData .materialTheme (.light m/ThemeData))
          .cupertinoDarkTheme (m/MaterialBasedCupertinoThemeData
                                .materialTheme (.copyWith (.dark m/ThemeData)
                                                          .cupertinoOverrideTheme (c/CupertinoThemeData
                                                                                    .brightness d.Brightness/dark
                                                                                    .barBackgroundColor (.-barBackgroundColor darkDefaultCupertinoTheme)
                                                                                    .textTheme (c/CupertinoTextThemeData
                                                                                                 .navActionTextStyle
                                                                                                 (.copyWith
                                                                                                   (.-navActionTextStyle (.-textTheme darkDefaultCupertinoTheme))
                                                                                                   .color (d/Color 0xF0F9F9F9))
                                                                                                 .navLargeTitleTextStyle
                                                                                                 (.copyWith
                                                                                                   (.-navLargeTitleTextStyle (.-textTheme darkDefaultCupertinoTheme))
                                                                                                   .color (d/Color 0xF0F9F9F9))))))
          .builder
          (fn [theme-context]
            (pw/PlatformApp
              .title "raz dwa"
              .localizationsDelegates [m.DefaultMaterialLocalizations/delegate
                                       m.DefaultWidgetsLocalizations/delegate
                                       c.DefaultCupertinoLocalizations/delegate]
              .home
              (pw/PlatformTabScaffold
                .tabController (pw/PlatformTabController)
                .items [(w/BottomNavigationBarItem
                          .label "Info"
                          .icon (w/Icon (.-info (pw/PlatformIcons theme-context))))
                        (w/BottomNavigationBarItem
                          .label "Error"
                          .icon (w/Icon (.-error (pw/PlatformIcons theme-context))))]
                .appBarBuilder
                (fn [context _]
                  (pw/PlatformAppBar
                    .title (m/Text (str "App title (" (pw/platform context) ")"))
                    .leading (pw/PlatformIconButton
                               .onPressed (fn ^void []
                                            (pw/showPlatformDialog
                                              .context context
                                              .builder (fn [_] (pw/PlatformAlertDialog .title (w/Text "Alert dd"))))
                                            nil)
                               .materialIcon (w/Icon (.-home (pw/PlatformIcons theme-context)))
                               .cupertinoIcon (w/Icon (.-home (pw/PlatformIcons theme-context))))))
                .bodyBuilder
                (fn [_ _]
                  (f/widget
                    m/Center
                    (m/DataTable
                      .columns [(m/DataColumn .label (w/Text "First"))
                                (m/DataColumn .label (w/Text "Second"))]
                      .rows [(m/DataRow
                               .cells [(m/DataCell (w/Text "Cell 1"))
                                       (m/DataCell (w/Text "Cell 2"))])])))))))))))

